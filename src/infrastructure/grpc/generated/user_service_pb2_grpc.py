# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import user_service_pb2 as user__service__pb2

GRPC_GENERATED_VERSION = '1.65.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterInstructor = channel.unary_unary(
                '/user_service.UserService/RegisterInstructor',
                request_serializer=user__service__pb2.RegisterInstructorRequest.SerializeToString,
                response_deserializer=user__service__pb2.RegisterInstructorResponse.FromString,
                _registered_method=True)
        self.UpdateUserDetails = channel.unary_unary(
                '/user_service.UserService/UpdateUserDetails',
                request_serializer=user__service__pb2.UpdateUserDetailsRequest.SerializeToString,
                response_deserializer=user__service__pb2.UpdateUserDetailsResponse.FromString,
                _registered_method=True)
        self.GetWalletTransactions = channel.unary_unary(
                '/user_service.UserService/GetWalletTransactions',
                request_serializer=user__service__pb2.GetWalletTransactionsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetWalletTransactionsResponse.FromString,
                _registered_method=True)
        self.GetAllUsers = channel.unary_unary(
                '/user_service.UserService/GetAllUsers',
                request_serializer=user__service__pb2.GetAllUsersRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetAllUsersResponse.FromString,
                _registered_method=True)
        self.GetAllUserEmails = channel.unary_unary(
                '/user_service.UserService/GetAllUserEmails',
                request_serializer=user__service__pb2.GetAllUserEmailsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetAllUserEmailsResponse.FromString,
                _registered_method=True)
        self.CheckUserEmailExist = channel.unary_unary(
                '/user_service.UserService/CheckUserEmailExist',
                request_serializer=user__service__pb2.CheckUserByEmailRequest.SerializeToString,
                response_deserializer=user__service__pb2.CheckUserByEmailResponse.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/user_service.UserService/GetUser',
                request_serializer=user__service__pb2.GetUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetUserResponse.FromString,
                _registered_method=True)
        self.GetUsersByIds = channel.unary_unary(
                '/user_service.UserService/GetUsersByIds',
                request_serializer=user__service__pb2.GetUsersByIdsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetUsersByIdsResponse.FromString,
                _registered_method=True)
        self.GetCurrentUser = channel.unary_unary(
                '/user_service.UserService/GetCurrentUser',
                request_serializer=user__service__pb2.GetCurrentUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetCurrentUserResponse.FromString,
                _registered_method=True)
        self.BlockUser = channel.unary_unary(
                '/user_service.UserService/BlockUser',
                request_serializer=user__service__pb2.BlockUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.BlockUserResponse.FromString,
                _registered_method=True)
        self.UnBlockUser = channel.unary_unary(
                '/user_service.UserService/UnBlockUser',
                request_serializer=user__service__pb2.UnBlockUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.UnBlockUserResponse.FromString,
                _registered_method=True)
        self.GetAllInstructors = channel.unary_unary(
                '/user_service.UserService/GetAllInstructors',
                request_serializer=user__service__pb2.GetAllInstructorsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetAllInstructorsResponse.FromString,
                _registered_method=True)
        self.AddToCart = channel.unary_unary(
                '/user_service.UserService/AddToCart',
                request_serializer=user__service__pb2.AddToCartRequest.SerializeToString,
                response_deserializer=user__service__pb2.AddToCartResponse.FromString,
                _registered_method=True)
        self.ToggleCartItem = channel.unary_unary(
                '/user_service.UserService/ToggleCartItem',
                request_serializer=user__service__pb2.ToggleCartItemRequest.SerializeToString,
                response_deserializer=user__service__pb2.ToggleCartItemResponse.FromString,
                _registered_method=True)
        self.RemoveFromCart = channel.unary_unary(
                '/user_service.UserService/RemoveFromCart',
                request_serializer=user__service__pb2.RemoveFromCartRequest.SerializeToString,
                response_deserializer=user__service__pb2.RemoveFromCartResponse.FromString,
                _registered_method=True)
        self.ListUserCart = channel.unary_unary(
                '/user_service.UserService/ListUserCart',
                request_serializer=user__service__pb2.ListCartRequest.SerializeToString,
                response_deserializer=user__service__pb2.ListCartResponse.FromString,
                _registered_method=True)
        self.AddToWishlist = channel.unary_unary(
                '/user_service.UserService/AddToWishlist',
                request_serializer=user__service__pb2.AddToWishlistRequest.SerializeToString,
                response_deserializer=user__service__pb2.AddToWishlistResponse.FromString,
                _registered_method=True)
        self.ToggleWishlistItem = channel.unary_unary(
                '/user_service.UserService/ToggleWishlistItem',
                request_serializer=user__service__pb2.ToggleWishlistItemRequest.SerializeToString,
                response_deserializer=user__service__pb2.ToggleWishlistItemResponse.FromString,
                _registered_method=True)
        self.RemoveFromWishlist = channel.unary_unary(
                '/user_service.UserService/RemoveFromWishlist',
                request_serializer=user__service__pb2.RemoveFromWishlistRequest.SerializeToString,
                response_deserializer=user__service__pb2.RemoveFromWishlistResponse.FromString,
                _registered_method=True)
        self.ListUserWishlist = channel.unary_unary(
                '/user_service.UserService/ListUserWishlist',
                request_serializer=user__service__pb2.ListWishlistRequest.SerializeToString,
                response_deserializer=user__service__pb2.ListWishlistResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterInstructor(self, request, context):
        """Get New Refresh Token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserDetails(self, request, context):
        """Update User Details
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletTransactions(self, request, context):
        """Get Wallet Transactions for a User (with pagination)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Get All Users (with pagination)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUserEmails(self, request, context):
        """Get All Users emails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUserEmailExist(self, request, context):
        """Get All Users emails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Get Details About a Particular User by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsersByIds(self, request, context):
        """Get Details About a Particular User by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentUser(self, request, context):
        """// Get Details About the currently logged in User
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlockUser(self, request, context):
        """Block/Unblock a User
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnBlockUser(self, request, context):
        """Block/Unblock a User
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllInstructors(self, request, context):
        """Get All Instructors (with pagination)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToCart(self, request, context):
        """Cart
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleCartItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFromCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToWishlist(self, request, context):
        """Wishlist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleWishlistItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFromWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterInstructor': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterInstructor,
                    request_deserializer=user__service__pb2.RegisterInstructorRequest.FromString,
                    response_serializer=user__service__pb2.RegisterInstructorResponse.SerializeToString,
            ),
            'UpdateUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserDetails,
                    request_deserializer=user__service__pb2.UpdateUserDetailsRequest.FromString,
                    response_serializer=user__service__pb2.UpdateUserDetailsResponse.SerializeToString,
            ),
            'GetWalletTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletTransactions,
                    request_deserializer=user__service__pb2.GetWalletTransactionsRequest.FromString,
                    response_serializer=user__service__pb2.GetWalletTransactionsResponse.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=user__service__pb2.GetAllUsersRequest.FromString,
                    response_serializer=user__service__pb2.GetAllUsersResponse.SerializeToString,
            ),
            'GetAllUserEmails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUserEmails,
                    request_deserializer=user__service__pb2.GetAllUserEmailsRequest.FromString,
                    response_serializer=user__service__pb2.GetAllUserEmailsResponse.SerializeToString,
            ),
            'CheckUserEmailExist': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUserEmailExist,
                    request_deserializer=user__service__pb2.CheckUserByEmailRequest.FromString,
                    response_serializer=user__service__pb2.CheckUserByEmailResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=user__service__pb2.GetUserRequest.FromString,
                    response_serializer=user__service__pb2.GetUserResponse.SerializeToString,
            ),
            'GetUsersByIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersByIds,
                    request_deserializer=user__service__pb2.GetUsersByIdsRequest.FromString,
                    response_serializer=user__service__pb2.GetUsersByIdsResponse.SerializeToString,
            ),
            'GetCurrentUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentUser,
                    request_deserializer=user__service__pb2.GetCurrentUserRequest.FromString,
                    response_serializer=user__service__pb2.GetCurrentUserResponse.SerializeToString,
            ),
            'BlockUser': grpc.unary_unary_rpc_method_handler(
                    servicer.BlockUser,
                    request_deserializer=user__service__pb2.BlockUserRequest.FromString,
                    response_serializer=user__service__pb2.BlockUserResponse.SerializeToString,
            ),
            'UnBlockUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UnBlockUser,
                    request_deserializer=user__service__pb2.UnBlockUserRequest.FromString,
                    response_serializer=user__service__pb2.UnBlockUserResponse.SerializeToString,
            ),
            'GetAllInstructors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllInstructors,
                    request_deserializer=user__service__pb2.GetAllInstructorsRequest.FromString,
                    response_serializer=user__service__pb2.GetAllInstructorsResponse.SerializeToString,
            ),
            'AddToCart': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToCart,
                    request_deserializer=user__service__pb2.AddToCartRequest.FromString,
                    response_serializer=user__service__pb2.AddToCartResponse.SerializeToString,
            ),
            'ToggleCartItem': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleCartItem,
                    request_deserializer=user__service__pb2.ToggleCartItemRequest.FromString,
                    response_serializer=user__service__pb2.ToggleCartItemResponse.SerializeToString,
            ),
            'RemoveFromCart': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFromCart,
                    request_deserializer=user__service__pb2.RemoveFromCartRequest.FromString,
                    response_serializer=user__service__pb2.RemoveFromCartResponse.SerializeToString,
            ),
            'ListUserCart': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserCart,
                    request_deserializer=user__service__pb2.ListCartRequest.FromString,
                    response_serializer=user__service__pb2.ListCartResponse.SerializeToString,
            ),
            'AddToWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToWishlist,
                    request_deserializer=user__service__pb2.AddToWishlistRequest.FromString,
                    response_serializer=user__service__pb2.AddToWishlistResponse.SerializeToString,
            ),
            'ToggleWishlistItem': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleWishlistItem,
                    request_deserializer=user__service__pb2.ToggleWishlistItemRequest.FromString,
                    response_serializer=user__service__pb2.ToggleWishlistItemResponse.SerializeToString,
            ),
            'RemoveFromWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFromWishlist,
                    request_deserializer=user__service__pb2.RemoveFromWishlistRequest.FromString,
                    response_serializer=user__service__pb2.RemoveFromWishlistResponse.SerializeToString,
            ),
            'ListUserWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserWishlist,
                    request_deserializer=user__service__pb2.ListWishlistRequest.FromString,
                    response_serializer=user__service__pb2.ListWishlistResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_service.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user_service.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterInstructor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/RegisterInstructor',
            user__service__pb2.RegisterInstructorRequest.SerializeToString,
            user__service__pb2.RegisterInstructorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/UpdateUserDetails',
            user__service__pb2.UpdateUserDetailsRequest.SerializeToString,
            user__service__pb2.UpdateUserDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWalletTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetWalletTransactions',
            user__service__pb2.GetWalletTransactionsRequest.SerializeToString,
            user__service__pb2.GetWalletTransactionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetAllUsers',
            user__service__pb2.GetAllUsersRequest.SerializeToString,
            user__service__pb2.GetAllUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllUserEmails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetAllUserEmails',
            user__service__pb2.GetAllUserEmailsRequest.SerializeToString,
            user__service__pb2.GetAllUserEmailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckUserEmailExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/CheckUserEmailExist',
            user__service__pb2.CheckUserByEmailRequest.SerializeToString,
            user__service__pb2.CheckUserByEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetUser',
            user__service__pb2.GetUserRequest.SerializeToString,
            user__service__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUsersByIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetUsersByIds',
            user__service__pb2.GetUsersByIdsRequest.SerializeToString,
            user__service__pb2.GetUsersByIdsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetCurrentUser',
            user__service__pb2.GetCurrentUserRequest.SerializeToString,
            user__service__pb2.GetCurrentUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BlockUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/BlockUser',
            user__service__pb2.BlockUserRequest.SerializeToString,
            user__service__pb2.BlockUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnBlockUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/UnBlockUser',
            user__service__pb2.UnBlockUserRequest.SerializeToString,
            user__service__pb2.UnBlockUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllInstructors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetAllInstructors',
            user__service__pb2.GetAllInstructorsRequest.SerializeToString,
            user__service__pb2.GetAllInstructorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddToCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/AddToCart',
            user__service__pb2.AddToCartRequest.SerializeToString,
            user__service__pb2.AddToCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ToggleCartItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ToggleCartItem',
            user__service__pb2.ToggleCartItemRequest.SerializeToString,
            user__service__pb2.ToggleCartItemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveFromCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/RemoveFromCart',
            user__service__pb2.RemoveFromCartRequest.SerializeToString,
            user__service__pb2.RemoveFromCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUserCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ListUserCart',
            user__service__pb2.ListCartRequest.SerializeToString,
            user__service__pb2.ListCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddToWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/AddToWishlist',
            user__service__pb2.AddToWishlistRequest.SerializeToString,
            user__service__pb2.AddToWishlistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ToggleWishlistItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ToggleWishlistItem',
            user__service__pb2.ToggleWishlistItemRequest.SerializeToString,
            user__service__pb2.ToggleWishlistItemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveFromWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/RemoveFromWishlist',
            user__service__pb2.RemoveFromWishlistRequest.SerializeToString,
            user__service__pb2.RemoveFromWishlistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUserWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ListUserWishlist',
            user__service__pb2.ListWishlistRequest.SerializeToString,
            user__service__pb2.ListWishlistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
